{
  "version": 3,
  "sources": ["../../../../../node_modules/highlight.js/es/languages/http.js"],
  "sourcesContent": ["/*\nLanguage: HTTP\nDescription: HTTP request and response headers with automatic body highlighting\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nCategory: protocols, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview\n*/\n\nfunction http(hljs) {\n  const regex = hljs.regex;\n  const VERSION = 'HTTP/([32]|1\\\\.[01])';\n  const HEADER_NAME = /[A-Za-z][A-Za-z0-9-]*/;\n  const HEADER = {\n    className: 'attribute',\n    begin: regex.concat('^', HEADER_NAME, '(?=\\\\:\\\\s)'),\n    starts: {\n      contains: [{\n        className: \"punctuation\",\n        begin: /: /,\n        relevance: 0,\n        starts: {\n          end: '$',\n          relevance: 0\n        }\n      }]\n    }\n  };\n  const HEADERS_AND_BODY = [HEADER, {\n    begin: '\\\\n\\\\n',\n    starts: {\n      subLanguage: [],\n      endsWithParent: true\n    }\n  }];\n  return {\n    name: 'HTTP',\n    aliases: ['https'],\n    illegal: /\\S/,\n    contains: [\n    // response\n    {\n      begin: '^(?=' + VERSION + \" \\\\d{3})\",\n      end: /$/,\n      contains: [{\n        className: \"meta\",\n        begin: VERSION\n      }, {\n        className: 'number',\n        begin: '\\\\b\\\\d{3}\\\\b'\n      }],\n      starts: {\n        end: /\\b\\B/,\n        illegal: /\\S/,\n        contains: HEADERS_AND_BODY\n      }\n    },\n    // request\n    {\n      begin: '(?=^[A-Z]+ (.*?) ' + VERSION + '$)',\n      end: /$/,\n      contains: [{\n        className: 'string',\n        begin: ' ',\n        end: ' ',\n        excludeBegin: true,\n        excludeEnd: true\n      }, {\n        className: \"meta\",\n        begin: VERSION\n      }, {\n        className: 'keyword',\n        begin: '[A-Z]+'\n      }],\n      starts: {\n        end: /\\b\\B/,\n        illegal: /\\S/,\n        contains: HEADERS_AND_BODY\n      }\n    },\n    // to allow headers to work even without a preamble\n    hljs.inherit(HEADER, {\n      relevance: 0\n    })]\n  };\n}\nexport { http as default };"],
  "mappings": ";;;AAQA,SAAS,KAAK,MAAM;AAClB,QAAM,QAAQ,KAAK;AACnB,QAAM,UAAU;AAChB,QAAM,cAAc;AACpB,QAAM,SAAS;AAAA,IACb,WAAW;AAAA,IACX,OAAO,MAAM,OAAO,KAAK,aAAa,YAAY;AAAA,IAClD,QAAQ;AAAA,MACN,UAAU,CAAC;AAAA,QACT,WAAW;AAAA,QACX,OAAO;AAAA,QACP,WAAW;AAAA,QACX,QAAQ;AAAA,UACN,KAAK;AAAA,UACL,WAAW;AAAA,QACb;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AACA,QAAM,mBAAmB,CAAC,QAAQ;AAAA,IAChC,OAAO;AAAA,IACP,QAAQ;AAAA,MACN,aAAa,CAAC;AAAA,MACd,gBAAgB;AAAA,IAClB;AAAA,EACF,CAAC;AACD,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC,OAAO;AAAA,IACjB,SAAS;AAAA,IACT,UAAU;AAAA;AAAA,MAEV;AAAA,QACE,OAAO,SAAS,UAAU;AAAA,QAC1B,KAAK;AAAA,QACL,UAAU,CAAC;AAAA,UACT,WAAW;AAAA,UACX,OAAO;AAAA,QACT,GAAG;AAAA,UACD,WAAW;AAAA,UACX,OAAO;AAAA,QACT,CAAC;AAAA,QACD,QAAQ;AAAA,UACN,KAAK;AAAA,UACL,SAAS;AAAA,UACT,UAAU;AAAA,QACZ;AAAA,MACF;AAAA;AAAA,MAEA;AAAA,QACE,OAAO,sBAAsB,UAAU;AAAA,QACvC,KAAK;AAAA,QACL,UAAU,CAAC;AAAA,UACT,WAAW;AAAA,UACX,OAAO;AAAA,UACP,KAAK;AAAA,UACL,cAAc;AAAA,UACd,YAAY;AAAA,QACd,GAAG;AAAA,UACD,WAAW;AAAA,UACX,OAAO;AAAA,QACT,GAAG;AAAA,UACD,WAAW;AAAA,UACX,OAAO;AAAA,QACT,CAAC;AAAA,QACD,QAAQ;AAAA,UACN,KAAK;AAAA,UACL,SAAS;AAAA,UACT,UAAU;AAAA,QACZ;AAAA,MACF;AAAA;AAAA,MAEA,KAAK,QAAQ,QAAQ;AAAA,QACnB,WAAW;AAAA,MACb,CAAC;AAAA,IAAC;AAAA,EACJ;AACF;",
  "names": []
}
