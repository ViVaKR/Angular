{
  "version": 3,
  "sources": ["../../../../../node_modules/highlight.js/es/languages/rust.js"],
  "sourcesContent": ["/*\nLanguage: Rust\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\nWebsite: https://www.rust-lang.org\nCategory: common, system\n*/\n\n/** @type LanguageFn */\n\nfunction rust(hljs) {\n  const regex = hljs.regex;\n  // ============================================\n  // Added to support the r# keyword, which is a raw identifier in Rust.\n  const RAW_IDENTIFIER = /(r#)?/;\n  const UNDERSCORE_IDENT_RE = regex.concat(RAW_IDENTIFIER, hljs.UNDERSCORE_IDENT_RE);\n  const IDENT_RE = regex.concat(RAW_IDENTIFIER, hljs.IDENT_RE);\n  // ============================================\n  const FUNCTION_INVOKE = {\n    className: \"title.function.invoke\",\n    relevance: 0,\n    begin: regex.concat(/\\b/, /(?!let|for|while|if|else|match\\b)/, IDENT_RE, regex.lookahead(/\\s*\\(/))\n  };\n  const NUMBER_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n  const KEYWORDS = [\"abstract\", \"as\", \"async\", \"await\", \"become\", \"box\", \"break\", \"const\", \"continue\", \"crate\", \"do\", \"dyn\", \"else\", \"enum\", \"extern\", \"false\", \"final\", \"fn\", \"for\", \"if\", \"impl\", \"in\", \"let\", \"loop\", \"macro\", \"match\", \"mod\", \"move\", \"mut\", \"override\", \"priv\", \"pub\", \"ref\", \"return\", \"self\", \"Self\", \"static\", \"struct\", \"super\", \"trait\", \"true\", \"try\", \"type\", \"typeof\", \"union\", \"unsafe\", \"unsized\", \"use\", \"virtual\", \"where\", \"while\", \"yield\"];\n  const LITERALS = [\"true\", \"false\", \"Some\", \"None\", \"Ok\", \"Err\"];\n  const BUILTINS = [\n  // functions\n  'drop ',\n  // traits\n  \"Copy\", \"Send\", \"Sized\", \"Sync\", \"Drop\", \"Fn\", \"FnMut\", \"FnOnce\", \"ToOwned\", \"Clone\", \"Debug\", \"PartialEq\", \"PartialOrd\", \"Eq\", \"Ord\", \"AsRef\", \"AsMut\", \"Into\", \"From\", \"Default\", \"Iterator\", \"Extend\", \"IntoIterator\", \"DoubleEndedIterator\", \"ExactSizeIterator\", \"SliceConcatExt\", \"ToString\",\n  // macros\n  \"assert!\", \"assert_eq!\", \"bitflags!\", \"bytes!\", \"cfg!\", \"col!\", \"concat!\", \"concat_idents!\", \"debug_assert!\", \"debug_assert_eq!\", \"env!\", \"eprintln!\", \"panic!\", \"file!\", \"format!\", \"format_args!\", \"include_bytes!\", \"include_str!\", \"line!\", \"local_data_key!\", \"module_path!\", \"option_env!\", \"print!\", \"println!\", \"select!\", \"stringify!\", \"try!\", \"unimplemented!\", \"unreachable!\", \"vec!\", \"write!\", \"writeln!\", \"macro_rules!\", \"assert_ne!\", \"debug_assert_ne!\"];\n  const TYPES = [\"i8\", \"i16\", \"i32\", \"i64\", \"i128\", \"isize\", \"u8\", \"u16\", \"u32\", \"u64\", \"u128\", \"usize\", \"f32\", \"f64\", \"str\", \"char\", \"bool\", \"Box\", \"Option\", \"Result\", \"String\", \"Vec\"];\n  return {\n    name: 'Rust',\n    aliases: ['rs'],\n    keywords: {\n      $pattern: hljs.IDENT_RE + '!?',\n      type: TYPES,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in: BUILTINS\n    },\n    illegal: '</',\n    contains: [hljs.C_LINE_COMMENT_MODE, hljs.COMMENT('/\\\\*', '\\\\*/', {\n      contains: ['self']\n    }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      begin: /b?\"/,\n      illegal: null\n    }), {\n      className: 'string',\n      variants: [{\n        begin: /b?r(#*)\"(.|\\n)*?\"\\1(?!#)/\n      }, {\n        begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/\n      }]\n    }, {\n      className: 'symbol',\n      begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n    }, {\n      className: 'number',\n      variants: [{\n        begin: '\\\\b0b([01_]+)' + NUMBER_SUFFIX\n      }, {\n        begin: '\\\\b0o([0-7_]+)' + NUMBER_SUFFIX\n      }, {\n        begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUMBER_SUFFIX\n      }, {\n        begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' + NUMBER_SUFFIX\n      }],\n      relevance: 0\n    }, {\n      begin: [/fn/, /\\s+/, UNDERSCORE_IDENT_RE],\n      className: {\n        1: \"keyword\",\n        3: \"title.function\"\n      }\n    }, {\n      className: 'meta',\n      begin: '#!?\\\\[',\n      end: '\\\\]',\n      contains: [{\n        className: 'string',\n        begin: /\"/,\n        end: /\"/,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }]\n    }, {\n      begin: [/let/, /\\s+/, /(?:mut\\s+)?/, UNDERSCORE_IDENT_RE],\n      className: {\n        1: \"keyword\",\n        3: \"keyword\",\n        4: \"variable\"\n      }\n    },\n    // must come before impl/for rule later\n    {\n      begin: [/for/, /\\s+/, UNDERSCORE_IDENT_RE, /\\s+/, /in/],\n      className: {\n        1: \"keyword\",\n        3: \"variable\",\n        5: \"keyword\"\n      }\n    }, {\n      begin: [/type/, /\\s+/, UNDERSCORE_IDENT_RE],\n      className: {\n        1: \"keyword\",\n        3: \"title.class\"\n      }\n    }, {\n      begin: [/(?:trait|enum|struct|union|impl|for)/, /\\s+/, UNDERSCORE_IDENT_RE],\n      className: {\n        1: \"keyword\",\n        3: \"title.class\"\n      }\n    }, {\n      begin: hljs.IDENT_RE + '::',\n      keywords: {\n        keyword: \"Self\",\n        built_in: BUILTINS,\n        type: TYPES\n      }\n    }, {\n      className: \"punctuation\",\n      begin: '->'\n    }, FUNCTION_INVOKE]\n  };\n}\nexport { rust as default };"],
  "mappings": "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",
  "names": []
}
