{
  "version": 3,
  "sources": ["../../../../../node_modules/highlight.js/es/languages/ini.js"],
  "sourcesContent": ["/*\nLanguage: TOML, also INI\nDescription: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.\nContributors: Guillaume Gomez <guillaume1.gomez@gmail.com>\nCategory: common, config\nWebsite: https://github.com/toml-lang/toml\n*/\n\nfunction ini(hljs) {\n  const regex = hljs.regex;\n  const NUMBERS = {\n    className: 'number',\n    relevance: 0,\n    variants: [{\n      begin: /([+-]+)?[\\d]+_[\\d_]+/\n    }, {\n      begin: hljs.NUMBER_RE\n    }]\n  };\n  const COMMENTS = hljs.COMMENT();\n  COMMENTS.variants = [{\n    begin: /;/,\n    end: /$/\n  }, {\n    begin: /#/,\n    end: /$/\n  }];\n  const VARIABLES = {\n    className: 'variable',\n    variants: [{\n      begin: /\\$[\\w\\d\"][\\w\\d_]*/\n    }, {\n      begin: /\\$\\{(.*?)\\}/\n    }]\n  };\n  const LITERALS = {\n    className: 'literal',\n    begin: /\\bon|off|true|false|yes|no\\b/\n  };\n  const STRINGS = {\n    className: \"string\",\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [{\n      begin: \"'''\",\n      end: \"'''\",\n      relevance: 10\n    }, {\n      begin: '\"\"\"',\n      end: '\"\"\"',\n      relevance: 10\n    }, {\n      begin: '\"',\n      end: '\"'\n    }, {\n      begin: \"'\",\n      end: \"'\"\n    }]\n  };\n  const ARRAY = {\n    begin: /\\[/,\n    end: /\\]/,\n    contains: [COMMENTS, LITERALS, VARIABLES, STRINGS, NUMBERS, 'self'],\n    relevance: 0\n  };\n  const BARE_KEY = /[A-Za-z0-9_-]+/;\n  const QUOTED_KEY_DOUBLE_QUOTE = /\"(\\\\\"|[^\"])*\"/;\n  const QUOTED_KEY_SINGLE_QUOTE = /'[^']*'/;\n  const ANY_KEY = regex.either(BARE_KEY, QUOTED_KEY_DOUBLE_QUOTE, QUOTED_KEY_SINGLE_QUOTE);\n  const DOTTED_KEY = regex.concat(ANY_KEY, '(\\\\s*\\\\.\\\\s*', ANY_KEY, ')*', regex.lookahead(/\\s*=\\s*[^#\\s]/));\n  return {\n    name: 'TOML, also INI',\n    aliases: ['toml'],\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [COMMENTS, {\n      className: 'section',\n      begin: /\\[+/,\n      end: /\\]+/\n    }, {\n      begin: DOTTED_KEY,\n      className: 'attr',\n      starts: {\n        end: /$/,\n        contains: [COMMENTS, ARRAY, LITERALS, VARIABLES, STRINGS, NUMBERS]\n      }\n    }]\n  };\n}\nexport { ini as default };"],
  "mappings": ";;;AAQA,SAAS,IAAI,MAAM;AACjB,QAAM,QAAQ,KAAK;AACnB,QAAM,UAAU;AAAA,IACd,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU,CAAC;AAAA,MACT,OAAO;AAAA,IACT,GAAG;AAAA,MACD,OAAO,KAAK;AAAA,IACd,CAAC;AAAA,EACH;AACA,QAAM,WAAW,KAAK,QAAQ;AAC9B,WAAS,WAAW,CAAC;AAAA,IACnB,OAAO;AAAA,IACP,KAAK;AAAA,EACP,GAAG;AAAA,IACD,OAAO;AAAA,IACP,KAAK;AAAA,EACP,CAAC;AACD,QAAM,YAAY;AAAA,IAChB,WAAW;AAAA,IACX,UAAU,CAAC;AAAA,MACT,OAAO;AAAA,IACT,GAAG;AAAA,MACD,OAAO;AAAA,IACT,CAAC;AAAA,EACH;AACA,QAAM,WAAW;AAAA,IACf,WAAW;AAAA,IACX,OAAO;AAAA,EACT;AACA,QAAM,UAAU;AAAA,IACd,WAAW;AAAA,IACX,UAAU,CAAC,KAAK,gBAAgB;AAAA,IAChC,UAAU,CAAC;AAAA,MACT,OAAO;AAAA,MACP,KAAK;AAAA,MACL,WAAW;AAAA,IACb,GAAG;AAAA,MACD,OAAO;AAAA,MACP,KAAK;AAAA,MACL,WAAW;AAAA,IACb,GAAG;AAAA,MACD,OAAO;AAAA,MACP,KAAK;AAAA,IACP,GAAG;AAAA,MACD,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AACA,QAAM,QAAQ;AAAA,IACZ,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU,CAAC,UAAU,UAAU,WAAW,SAAS,SAAS,MAAM;AAAA,IAClE,WAAW;AAAA,EACb;AACA,QAAM,WAAW;AACjB,QAAM,0BAA0B;AAChC,QAAM,0BAA0B;AAChC,QAAM,UAAU,MAAM,OAAO,UAAU,yBAAyB,uBAAuB;AACvF,QAAM,aAAa,MAAM,OAAO,SAAS,gBAAgB,SAAS,MAAM,MAAM,UAAU,eAAe,CAAC;AACxG,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC,MAAM;AAAA,IAChB,kBAAkB;AAAA,IAClB,SAAS;AAAA,IACT,UAAU,CAAC,UAAU;AAAA,MACnB,WAAW;AAAA,MACX,OAAO;AAAA,MACP,KAAK;AAAA,IACP,GAAG;AAAA,MACD,OAAO;AAAA,MACP,WAAW;AAAA,MACX,QAAQ;AAAA,QACN,KAAK;AAAA,QACL,UAAU,CAAC,UAAU,OAAO,UAAU,WAAW,SAAS,OAAO;AAAA,MACnE;AAAA,IACF,CAAC;AAAA,EACH;AACF;",
  "names": []
}
