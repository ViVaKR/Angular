{
  "version": 3,
  "sources": ["../../../../../node_modules/highlight.js/es/languages/java.js"],
  "sourcesContent": ["// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [\n  // DecimalFloatingPointLiteral\n  // including ExponentPart\n  {\n    begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` + `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b`\n  },\n  // excluding ExponentPart\n  {\n    begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)`\n  }, {\n    begin: `(${frac})[fFdD]?\\\\b`\n  }, {\n    begin: `\\\\b(${decimalDigits})[fFdD]\\\\b`\n  },\n  // HexadecimalFloatingPointLiteral\n  {\n    begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` + `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b`\n  },\n  // DecimalIntegerLiteral\n  {\n    begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b'\n  },\n  // HexIntegerLiteral\n  {\n    begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b`\n  },\n  // OctalIntegerLiteral\n  {\n    begin: '\\\\b0(_*[0-7])*[lL]?\\\\b'\n  },\n  // BinaryIntegerLiteral\n  {\n    begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b'\n  }],\n  relevance: 0\n};\n\n/*\nLanguage: Java\nAuthor: Vsevolod Solovyov <vsevolod.solovyov@gmail.com>\nCategory: common, enterprise\nWebsite: https://www.java.com/\n*/\n\n/**\n * Allows recursive regex expressions to a given depth\n *\n * ie: recurRegex(\"(abc~~~)\", /~~~/g, 2) becomes:\n * (abc(abc(abc)))\n *\n * @param {string} re\n * @param {RegExp} substitution (should be a g mode regex)\n * @param {number} depth\n * @returns {string}``\n */\nfunction recurRegex(re, substitution, depth) {\n  if (depth === -1) return \"\";\n  return re.replace(substitution, _ => {\n    return recurRegex(re, substitution, depth - 1);\n  });\n}\n\n/** @type LanguageFn */\nfunction java(hljs) {\n  const regex = hljs.regex;\n  const JAVA_IDENT_RE = '[\\u00C0-\\u02B8a-zA-Z_$][\\u00C0-\\u02B8a-zA-Z_$0-9]*';\n  const GENERIC_IDENT_RE = JAVA_IDENT_RE + recurRegex('(?:<' + JAVA_IDENT_RE + '~~~(?:\\\\s*,\\\\s*' + JAVA_IDENT_RE + '~~~)*>)?', /~~~/g, 2);\n  const MAIN_KEYWORDS = ['synchronized', 'abstract', 'private', 'var', 'static', 'if', 'const ', 'for', 'while', 'strictfp', 'finally', 'protected', 'import', 'native', 'final', 'void', 'enum', 'else', 'break', 'transient', 'catch', 'instanceof', 'volatile', 'case', 'assert', 'package', 'default', 'public', 'try', 'switch', 'continue', 'throws', 'protected', 'public', 'private', 'module', 'requires', 'exports', 'do', 'sealed', 'yield', 'permits', 'goto'];\n  const BUILT_INS = ['super', 'this'];\n  const LITERALS = ['false', 'true', 'null'];\n  const TYPES = ['char', 'boolean', 'long', 'float', 'int', 'byte', 'short', 'double'];\n  const KEYWORDS = {\n    keyword: MAIN_KEYWORDS,\n    literal: LITERALS,\n    type: TYPES,\n    built_in: BUILT_INS\n  };\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + JAVA_IDENT_RE,\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      contains: [\"self\"] // allow nested () inside our annotation\n    }]\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    relevance: 0,\n    contains: [hljs.C_BLOCK_COMMENT_MODE],\n    endsParent: true\n  };\n  return {\n    name: 'Java',\n    aliases: ['jsp'],\n    keywords: KEYWORDS,\n    illegal: /<\\/|#/,\n    contains: [hljs.COMMENT('/\\\\*\\\\*', '\\\\*/', {\n      relevance: 0,\n      contains: [{\n        // eat up @'s in emails to prevent them to be recognized as doctags\n        begin: /\\w+@/,\n        relevance: 0\n      }, {\n        className: 'doctag',\n        begin: '@[A-Za-z]+'\n      }]\n    }),\n    // relevance boost\n    {\n      begin: /import java\\.[a-z]+\\./,\n      keywords: \"import\",\n      relevance: 2\n    }, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n      begin: /\"\"\"/,\n      end: /\"\"\"/,\n      className: \"string\",\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, {\n      match: [/\\b(?:class|interface|enum|extends|implements|new)/, /\\s+/, JAVA_IDENT_RE],\n      className: {\n        1: \"keyword\",\n        3: \"title.class\"\n      }\n    }, {\n      // Exceptions for hyphenated keywords\n      match: /non-sealed/,\n      scope: \"keyword\"\n    }, {\n      begin: [regex.concat(/(?!else)/, JAVA_IDENT_RE), /\\s+/, JAVA_IDENT_RE, /\\s+/, /=(?!=)/],\n      className: {\n        1: \"type\",\n        3: \"variable\",\n        5: \"operator\"\n      }\n    }, {\n      begin: [/record/, /\\s+/, JAVA_IDENT_RE],\n      className: {\n        1: \"keyword\",\n        3: \"title.class\"\n      },\n      contains: [PARAMS, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n    }, {\n      // Expression keywords prevent 'keyword Name(...)' from being\n      // recognized as a function definition\n      beginKeywords: 'new throw return else',\n      relevance: 0\n    }, {\n      begin: ['(?:' + GENERIC_IDENT_RE + '\\\\s+)', hljs.UNDERSCORE_IDENT_RE, /\\s*(?=\\()/],\n      className: {\n        2: \"title.function\"\n      },\n      keywords: KEYWORDS,\n      contains: [{\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        relevance: 0,\n        contains: [ANNOTATION, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, NUMERIC, hljs.C_BLOCK_COMMENT_MODE]\n      }, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n    }, NUMERIC, ANNOTATION]\n  };\n}\nexport { java as default };"],
  "mappings": "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",
  "names": []
}
