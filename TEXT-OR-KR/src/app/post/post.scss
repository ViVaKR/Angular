.container {
  width: 100%;
  height: 100dvh;
  display: grid;
  grid-template-columns: 270px 1fr;
  grid-template-rows: 1fr;

}

.leftMenu {
  background-image: linear-gradient(
                  to bottom,
                  rgba(8, 119, 166, 1.0) 0%,
                  rgb(232, 8, 60, 0.5) 100%,
                  rgba(8, 119, 116, 0.25) 50%
  );
  color: white;
  padding: 1rem;
}

.mainBody {
  padding: 0;
}

.pie {
  width: 40px;
  height: 40px;
  /* 1. 기본 배경색을 파란색으로 지정 */
  //background-color: rgba(8, 119, 166, 1.0);
  /* 2. 자식인 ::before 요소를 제어하기 위해 position 설정 */
  position: relative;
  /* 3. ::before가 넘치는 부분을 깔끔하게 잘라냄 */
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    /* 4. 왼쪽 상단에 배치 */
    top: 0;
    left: 0;
    width: 40px;
    height: 40px;

    /*
      5. 여기가 진짜 마법!
      - radial-gradient: 원형 그라데이션을 배경으로 사용
      - at 100% 100%: 그라데이션의 중심을 요소의 오른쪽 하단(100%, 100%)에 둠
      - white 40px: 중심에서 40px까지는 흰색(페이지 배경색과 동일하게)으로 채움
      - transparent 40.5px: 40px을 살짝 넘어서는 지점에서 투명하게 만듦 (경계선 처리)
    */
    background: radial-gradient(
                    circle 40px at 100% 100%,
                    transparent 0,
                    transparent 39.5px,
                    rgba(8, 119, 166, 1.0) 40px
    );
  }
}


section {
  padding-left: 40px;
  padding-top: 0;
}

/*
  fr (fraction, 공간 비율)
  auto (자동 크기)
  px, em, %, vw, vh 등 (고정 크기)

  grid-template-columns: repeat(9, 100px);


  auto-fill : 가능한 많은 열을 채움
  auto-fit : 가능한 많은 열을 채우고 남은 공간을 균등 분배

  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));


*/

/*
  align-content :
  justify-content :
  place-content :

  align-items :
  justify-items :
  place-items :
*/
